.photo(data-bind="with: repository[M!M]")
	.photoTop(data-bind="style: {display: can.edit() ? 'block' : 'none'}")
		.photoAction(data-bind="template: {name: edit() ? 'photoActionsEdit' : 'photoActionsView'}")
		.photoAction.convertAction(data-bind="style: {display: !edit() && can.convert() ? 'inline-block' : 'none'}, css: {disabled: exe()}")
			select.multiSelect#convertSelect(multiple="multiple", data-bind="multiselect: true, options: convertOptions, selectedOptions: selectedOpt, optionsValue: 'vId', optionsText: 'vName'")
			button.btn.btn-primary.btnConvert(type="button", data-bind="click: toConvert, attr: {disabled: exe()}")
				| start
		.photoMsg(data-bind="text: msg(), css: msgCss(), style: {display: msg().length ? '' : 'none'}")

	.row.photoData(data-bind="css: {editMode: edit()}")
		.col-xs-12.col-sm-8.col-lg-9.photoPanel
			.photoImgRow
				.photoImgSuperWrap
					.photoImgWrap(data-bind="css: {loading: photoLoading(), fragSensitive: !edit() && !fraging()}")
						img.photoImg(data-bind="attr: {src: photoSrc(), alt: p.title()}, style: {width: ws() + 'px', height: hs()+ 'px'}")
						.photoLoading
						//ko if: !edit()
						//ko foreach: p.frags
						a.photoFrag(data-bind="attr: {'data-cid': $data.cid(), href: '?hl=comment-' + $data.cid()}, style: {top: $data.t() + '%', left: $data.l() + '%', width: $data.w() + '%', height: $data.h() + '%', zIndex: 10 + (10000 / ($data.w() * $data.h())) >> 0}")
						// /ko
						// /ko
					.tools
						.tool.watched
							span.glyphicon.glyphicon-eye-open.light(title="Количество просмотров фотографии")
							.watch(data-bind="text: toolsNumFormat(p.vdcount()), attr: {title: p.vdcount()+ ' раз смотрели сегодня'}")
							.watch(data-bind="text: toolsNumFormat(p.vwcount()), attr: {title: p.vwcount()+ ' раз смотрели за неделю'}")
							.watch(data-bind="text: toolsNumFormat(p.vcount()), attr: {title: p.vcount()+ ' раз смотрели всего'}")
					.photoTools(data-bind="style: {width: ws() + 'px'}")
						span.toolsTxt
							//ko if: ws() !== p.ws() && hs() !== p.hs()
							span.sizeThis(data-bind="text: 'Текущий размер: ' + ws() + '×' + hs()")
							span &nbsp;|&nbsp;
							// /ko
							a.sizeStandard(target="_blank", data-bind="attr:{href: '/_p/d/' + p.file()}, text: 'Стандарт: ' + p.ws() + '×' + p.hs()")
							span &nbsp;|&nbsp;
							a.sizeOrigin(target="_blank", data-bind="attr:{href: '/_p/a/' + p.file()}, text: 'Оригинал: ' + p.w() + '×' + p.h()")
						//ko if: hscalePossible()
						.photoHeight.state(data-state="hscaleTumbler", data-bind="tooltip: {title: 'Подгонять по высоте видимой области', trigger: 'click hover'}, css: {on: hscaleTumbler()}, click: stateChange")
							i.icon-resize-vertical.icon-white
						// /ko
			//ko template: {name: edit() ? 'photoEdit' : 'photoView', afterRender: tplAfterRender}
			// /ko
		.col-xs-12.col-sm-4.col-lg-3.rightPanel
			table.tableUser(cellpadding="0")
				tbody
					tr
						td(style="width: 85px; min-width: 85px;")
							a.avatar.fringe(data-bind="attr: {href: '/u/' + p.user.login()}")
								img(data-bind="attr: {src: p.user.avatar()}, event: {load: onImgLoad, error: onAvatarError}")
						td
							.userInfo(data-bind="html: userInfo() + rnks()")
							//ko if: userRibbon().length
							.userRibbon
								//ko foreach: userRibbon
								a.photoPreview.withStatus(data-bind="attr: {href: '/p/' + cid, title: $data.title}, style: {marginRight: $parent.thumbM}, css: {'pFresh': $data.fresh, 'pDis': $data.disabled, 'pDel': $data.del}")
									.photoBox
										img.img(data-bind="attr: {src: sfile, alt: $data.title}, event: {load: $parent.onPreviewLoad, error: $parent.onPreviewErr}, style: {width: $parent.thumbW, height: $parent.thumbH}")
										.curtain
										//ko if: $data.noPublic
										i.icon-white.fringe.status(data-bind="css: {'icon-asterisk': fresh && !ready, 'icon-flag': fresh && ready, 'icon-lock': disabled, 'icon-trash': del}, attr: {title: fresh ? (ready ? 'Новая. Ждет подтверждения' : 'Новая фотография') : (disabled ? 'Фотография неактивна' : 'Фотография удалена')}")
										// /ko
								// /ko
							// /ko
			.photoMap.mContainer.mHidden(data-bind="allowBindings: false, style: {height: mapH()}")
			//ko if: nearestRibbon().length
			.photoTiles
				.lineBehind
					span(data-bind="html: 'Ближайшие фотографии'")
				//ko foreach: nearestRibbon
				a.photoPreview.withStatus(data-bind="attr: {href: '/p/' + cid, title: $data.title}, style: {marginRight: $parent.thumbM}")
					.photoBox
						img.img(data-bind="attr: {src: sfile, alt: $data.title}, event: {load: $parent.onPreviewLoad, error: $parent.onPreviewErr}, style: {width: $parent.thumbW, height: $parent.thumbH}")
						.curtain
				// /ko
			// /ko
		.commentsContainer.mContainer.mNoDisplay(data-bind="allowBindings: false")
	.heightExpander


	//-ACTIONS VIEW MODE
	script(id="photoActionsView", type="text/html")
		button.btn.btn-primary(type="button", data-bind="css: {disabled: exe()}, click: editSave, attr: {disabled: exe()}")
			span.glyphicon.glyphicon-pencil
			|  Редактировать
		//ko if: IOwner() && p.fresh() && !p.ready()
		button.btn.btn-success(type="button", title="Отправить на подтверждение модератору", data-bind="css: {disabled: exe()}, click: setReady, attr: {disabled: exe()}")
			span.glyphicon.glyphicon-check
			|  Готово
		// /ko
		div(style="display:inline-block")
			//ko if: canBeApprove()
			button.btn.btn-success(type="button", title="Подтвердить и опубликовать эту фотографию", data-bind="css: {disabled: exe()}, click: setApprove, attr: {disabled: exe()}")
				span.glyphicon.glyphicon-ok
				|  Подтвердить
			// /ko
			//ko if: canBeDisable()
			button.btn(type="button", data-bind="css: {'btn-warning': !p.disabled(), 'btn-success': p.disabled(), disabled: exe()}, click: toggleDisable, attr: {disabled: exe()}")
				span.glyphicon(data-bind="css: {'glyphicon-exclamation-sign': !p.disabled(), 'glyphicon-ok-sign': p.disabled()}")
				span(data-bind="text: p.disabled() ? ' Активировать' : ' Деактивировать'")
			// /ko
			//ko if: !p.del() && can.remove()
			button.btn.btn-danger(type="button", data-bind="css: {disabled: exe()}, click: remove, attr: {disabled: exe()}")
				span.glyphicon.glyphicon-trash
				span(data-bind="text: !IOwner() && p.fresh() ? ' Отклонить' : ' Удалить'")
			// /ko

	//-ACTIONS EDIT MODE
	script(id="photoActionsEdit", type="text/html")
		button.btn.btn-success(type="button", data-bind="css: {disabled: exe()}, click: editSave, attr: {disabled: exe()}")
			span.glyphicon.glyphicon-ok
			|  Сохранить
		button.btn.btn-danger(type="button", data-bind="css: {disabled: exe()},click: editCancel, attr: {disabled: exe()}")
			span.glyphicon.glyphicon-remove
			|  Отмена редактирования

	//-DATA VIEW MODE
	script(id="photoView", type="text/html")
		.row.photoInfoBlock
			//ko if: p.title().length
			.row.photoInfo.photoTitle.editable(data-bind="cEdit: {edit: edit(), val: p.title, cap: 'Введите название фотографии'}")
			// /ko
			//ko if: p.regions().length
			.row.regions(data-bind="foreach: p.regions")
				.region
					a(data-bind="text: ' ' + $data.title_local(), attr: {href: '/admin/region/' + $data.cid()}")
					//ko if: $index() < $parent.p.regions().length - 1
					| ,&nbsp;
					// /ko
			// /ko
			//ko if: p.desc().length
			.row.photoInfo(data-bind="html: p.desc()")
			// /ko
		.row.photoInfoBlock
			//ko if: p.address().length
			.row.photoInfo
				.infoName Адрес снимка:
				.editable(data-bind="cEdit: {edit: edit(), val: p.address, cap: 'Вы знаете адрес точки съемки?', readPrefix: 'Adress:', readPrefixCss: 'infoName'}")
			// /ko
			//ko if: p.source().length
			.row.photoInfo
				.infoName Источник:
				.editable(data-bind="html: p.source()")
			// /ko
			//ko if: p.author().length
			.row.photoInfo
				.infoName Автор:
				.editable(data-bind="cEdit: {edit: edit(), val: p.author, cap: 'Возможно вы знаете автора фотографии?'}")
			// /ko
		.row.photoInfoBlock
			.row.photoInfo
				| Мы думаем, что снимок сделан
				span(data-bind="html: '&nbsp;' + (p.year() !== p.year2() ? 'между' : 'в') + '&nbsp;'")
				span(data-bind="html: p.year()")
				span(data-bind="html: '&minus;' + p.year2(), style: {display: p.year() !== p.year2() ? '' : 'none'}")
				span(data-bind="html: '&nbsp;' + (p.year() !== p.year2() ? 'годами' : 'году') + '&nbsp;'")
				//ko if: p.dir && p.dir() && p.dir().length
				span &nbsp;(направление съемки &minus;&nbsp;
				span.editable(data-bind="text: $root.P.photoDirsTxt[p.dir()]", style="text-transform: lowercase;")
				| )
				// /ko
		a.help(href="http://start.planeta.ru/campaigns/1694", target="_blank", title="Узнайте как помочь проекту")
			img.helpimg(src="/img/misc/fund2/bnline.jpg", alt="Помогите PastVu")
		.h_separator

	//-EDIT MODE
	script(id="photoEdit", type="text/html")
		.row.photoInfoBlock
			.row.photoInfo.photoTitle.editable(data-bind="cEdit: {edit: edit(), val: p.title, cap: 'Введите название фотографии'}")
			.row.photoInfo.photoDesc
				textarea.descInput(wrap="soft", data-bind="event: {focus: descFocusBind}")
				label.descInputLabel(data-bind="click: descLabelClickBind") Опишите фотографию
		.row.photoInfoBlock
			.row.photoInfo
				.infoName Адрес снимка:
				.editable(data-bind="cEdit: {edit: edit(), val: p.address, cap: 'Вы знаете адрес снимка?', readPrefix: 'Adress:', readPrefixCss: 'infoName'}")
			.row.photoInfo
				.infoName Источник:
				.editable(data-bind="cEdit: {edit: edit(), val: p.source, cap: 'Если вам известен источник фотографии, укажите его здесь'}")
			.row.photoInfo
				.infoName Автор:
				.editable(data-bind="cEdit: {edit: edit(), val: p.author, cap: 'Возможно вы знаете автора фотографии?'}")
		.row.photoInfoBlock
			.row.photoInfo
				| Я считаю, что снимок сделан между&nbsp;
				span.editable(data-bind="cEdit: {edit: edit(), val: p.year}")
				| &nbsp;и&nbsp;
				span.editable(data-bind="cEdit: {edit: edit(), val: p.year2}")
				| &nbsp;&nbsp;Направление съемки&nbsp;
				select(data-bind="options: $root.P.photoDirsArr, value: p.dir, optionsText: function(item) {return $root.P.photoDirsTxt[item]}, optionsCaption: 'Выберите направление...'")