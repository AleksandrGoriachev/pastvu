.user_manage(data-bind="with: repository[M!M]")
    .panel-group#accordion
        .panel.panel-pastvu
            .panel-heading: .panel-title
                a.accordion-toggle(data-toggle="collapse", href="#credentials") Credentials
            .panel-collapse.collapse.in#credentials: .panel-body
                form
                    .form-group
                        .col-xs-12(data-bind="foreach: roles"): label.radio-inline
                            input(type="radio", name="credent_radios", data-bind="attr: {value: $data.cat}, checked: $parent.roleCategory")
                            span(data-bind="text: $data.name")
                    //ko if: roleCategory() === 'mod'
                    .form-group: .col-xs-12
                        .checkbox: label
                            input(type="checkbox", value = '5', data-bind="checked: role")
                            | Regions:&nbsp;
                            //ko if: !regions().length
                            span.region
                                span.glyphicon.glyphicon-globe
                                |  Whole world
                            // /ko
                            //ko foreach: regions
                            span.region.candrop(title="Remove region", data-bind="click: function() {$parent.regionDrop($data.cid);}")
                                span(data-bind="text: $data.title_en")
                            // /ko
                            span.regionEdit(data-bind="click: regionSelect")
                                span.glyphicon.glyphicon-pencil
                                | Change
                        .checkbox: label
                            input(type="checkbox", disabled)
                            | Language

                    // /ko
                    //ko if: credentialsChanged()
                    .form-group: .col-xs-12
                        button.btn.btn-sm.btn-success(type="button", data-bind="event: {click: saveCredentials}, attr: {disabled: exe()}")
                            span.glyphicon.glyphicon-ok
                            |  Save credentials
                        button.btn.btn-sm.btn-danger(type="button", data-bind="event: {click: cancelCredentials}, attr: {disabled: exe()}")
                            span.glyphicon.glyphicon-remove
                            |  Cancel
                    // /ko

        .panel.panel-pastvu
            .panel-heading: .panel-title
                a.accordion-toggle(data-toggle="collapse", href="#ranks") Restrictions
            .panel-collapse.collapse.in#ranks: .panel-body
                dl.dl-horizontal
                    dt.helpexists
                        abbr(title="Allow to change watermark on own photos and manage download of original settings," +
                        " send own photos to reconvert")
                            span.glyphicon.glyphicon-info-sign
                            |  Can change watermark and download origin settings
                    dd
                        .btn-group.btn-group-sm
                            button.btn.btn-primary.yes(type="button", data-bind="css: {active: !u.nowaterchange()}, click: changewaterchange") Yes
                            button.btn.btn-primary.no(type="button", data-bind="css: {active: u.nowaterchange()}, click: changewaterchange") No
                        p.text-muted(style="padding:6px 0 0 6px;line-height:1.1;font-size:11px;")
                            sup(style="margin-left:-6px;") *
                            |  This is a global setting for the user, affecting on the possibility of changing settings in their profile and individual settings for each photo. For each photo it can disable/enable it individually


        .panel.panel-pastvu
            .panel-heading: .panel-title
                a.accordion-toggle(data-toggle="collapse", href="#ranks") Special settings
            .panel-collapse.collapse.in#ranks: .panel-body
                .setTitle Assigned ranks
                form: .form-group
                    //ko foreach: ranks
                    label.checkbox-inline
                        input(type="checkbox", data-bind="attr: {value: $data.key}, checked: $parent.u.ranks")
                        span(data-bind="text: $data.desc")
                    // /ko

                .setTitle Limit of unconfirmed photos
                div(data-bind="html: 'Current setting: <b>'+photoNewLimitOrigin()+'</b>'", style="margin-bottom: 2px;")
                .calcInfo(data-bind="html: 'Available limit: <b>'+photoNewCan()+'</b>'")
                .calcInfo(data-bind="html: 'Total unconfirmed: <b>'+u.pfcount()+'</b>'")
                .calcInfo(data-bind="html: 'Total published: <b>'+u.pcount()+'</b>'")
                form.form-inline(style="margin-top: 7px;"): .form-group
                    .radio: label.radio-inline
                        input(type="radio", value="auto", name="photo_new_radios", data-bind="checked: photoNewLimitOption")
                        | Auto
                    .radio: label.radio-inline
                        input(type="radio", value="manual", name="photo_new_radios", data-bind="checked: photoNewLimitOption")
                        | Manual
                    .form-group
                        input.form-control.input-sm.photoLimit(type="text", title="A number between 0 and 10000", maxlength="5", pattern="[0-9]{1,5}", data-bind="value: photoNewLimit, valueUpdate: 'keyup', attr: {disabled: photoNewLimitOption() === 'auto'}, css: {}")