.user_settings(data-bind="with: repository[M!M]"): .panel-group#accordion
    .panel.panel-pastvu
        .panel-heading: .panel-title: a(data-toggle="collapse", href="#privacy") Privacy
        .panel-collapse.collapse.in#privacy: .panel-body
            dl.dl-horizontal
                dt My email
                dd: .row: .col-xs-9.col-sm-10.col-md-7.col-lg-4
                    .input-group
                        input.form-control(type="email", data-bind="attr: {size: u.email().length, disabled: !editEmail()}, value: u.email, valueUpdate: 'afterkeydown', executeOnEnter: saveEmail")
                        span.input-group-addon.action(data-bind="click: saveEmail, css: {save: editEmail()}")
                            span.glyphicon(data-bind="css: {'glyphicon-pencil': !editEmail(), 'glyphicon-ok': editEmail()}")
                        //ko if:editEmail()
                        span.input-group-addon.action.cancel(data-bind="click: cancelEmail, css: {save: editEmail()}")
                            span.glyphicon.glyphicon-remove
                        // /ko
            dl.dl-horizontal
                dt My password
                dd
                    //ko if: itsMe()
                    button.btn.btn-sm.btn-primary(type="button", title="Change current password", data-bind="event:{click: function(data, evt){auth.show('passChange')}}")
                        span Change
                    // /ko
                    button.btn.btn-sm.btn-primary(type="button", title="Change through email without entering current", data-bind="event:{click: function(data, evt){auth.showRecallRequest(u.login())}}")
                        span Request change
            dl.dl-horizontal
                dt Show real name in conversations
                dd: .btn-group.btn-group-sm
                    button.btn.btn-primary.yes(type="button", data-bind="css: {active: showName()}, click: toggleDisp") Yes
                    button.btn.btn-primary.no(type="button", data-bind="css: {active: !showName()}, click: toggleDisp") No

    .panel.panel-pastvu
        .panel-heading: .panel-title: a(data-toggle="collapse", href="#region") Regions
        .panel-collapse.collapse.in#region: .panel-body
            dl.dl-horizontal
                dt.helpexists
                    abbr(title="Region, which affect on some settings, for example, region of Home button on map, first element on list of regions etc.")
                        span.glyphicon.glyphicon-info-sign
                        | &nbsp;
                        span.glyphicon.glyphicon-home
                        |  Home region
                dd
                    span.region
                        span(data-bind="text: u.regionHome.title_en()")
                    span.regionEdit(data-bind="click: regionHomeSelect")
                        span.glyphicon.glyphicon-pencil
                        | Change
            //ko if: u.role() === 5 && u.mod_regions()
            dl.dl-horizontal.forMod
                dt.helpexists
                    abbr(title="Regions, where you are moderator. Assigned by administrator")
                        span.glyphicon.glyphicon-info-sign
                        |  Regions where I'm moderator
                dd
                    //ko if: !u.mod_regions().length
                    span.region
                        span.glyphicon.glyphicon-globe
                        |  Whole world
                    // /ko
                    //ko foreach: u.mod_regions
                    span.region
                        span(data-bind="text: $data.title_en()")
                    // /ko
            // /ko
            dl.dl-horizontal
                dt.helpexists
                    abbr(title="Regions, which define automatic content filtration")
                        span.glyphicon.glyphicon-info-sign
                        | &nbsp;
                        span.glyphicon.glyphicon-filter
                        |  Filter by default
                dd: span.panel-block
                    .radio(style="margin-top:0"): label
                        input(type="radio", name="regfilter_radios", value="all", data-bind="checked: regfiltercheck")
                        span.glyphicon.glyphicon-globe
                        |  Whole world (no filter)
                    .radio: label
                        input(type="radio", name="regfilter_radios", value="home", data-bind="checked: regfiltercheck")
                        span.glyphicon.glyphicon-home
                        |  Home region
                    .radio(style="margin-bottom:5px"): label
                        input(type="radio", name="regfilter_radios", value="list", data-bind="checked: regfiltercheck")
                        span.glyphicon.glyphicon-list
                        span  List
                        //ko if: regfiltercheck() === 'list'
                        | :&nbsp;
                        //ko foreach: u.regions
                        span.region.candrop(title="Remove from my regions", data-bind="click: function() {$parent.regionDrop($data.cid());}")
                            span(data-bind="text: $data.title_en()")
                        // /ko
                        //ko if: u.regions().length
                        span.regionEdit(data-bind="click: regionFilterSelect")
                            span.glyphicon.glyphicon-pencil
                            | Change
                        // /ko
                        // /ko
            dl.dl-horizontal
                dt.helpexists(style="color: #27578d;")
                    | Filter by default with selected regions:
                dd
            dl.dl-horizontal.dl-tight
                dt.helpexists
                    abbr(title="Images which located in users profile")
                        span.glyphicon.glyphicon-info-sign
                        |  User galleries
                dd
                    .btn-group.btn-group-sm
                        button.btn.btn-primary.yes(type="button", data-bind="css: {active: u.settings.r_f_user_gal()}, click: regionUserGal") Yes
                        button.btn.btn-primary.no(type="button", data-bind="css: {active: !u.settings.r_f_user_gal()}, click: regionUserGal") No
            dl.dl-horizontal.dl-tight
                dt.helpexists
                    abbr(title="Strip, which located close to user avatar on photo page")
                        span.glyphicon.glyphicon-info-sign
                        |  Strip of other user's images
                dd
                    .btn-group.btn-group-sm
                        button.btn.btn-primary.yes(type="button", data-bind="css: {active: u.settings.r_f_photo_user_gal()}, click: regionPhotoUserGal") Yes
                        button.btn.btn-primary.no(type="button", data-bind="css: {active: !u.settings.r_f_photo_user_gal()}, click: regionPhotoUserGal") No

    .panel.panel-pastvu
        .panel-heading: .panel-title: a(data-toggle="collapse", href="#photo") Images
        .panel-collapse.collapse.in#photo: .panel-body
            dl.dl-horizontal
                dt.helpexists
                    abbr(title="Show pastvu.com watermark by default, embedded in image")
                        span.glyphicon.glyphicon-info-sign
                        |  Show watermark by default
                dd
                    .btn-group.btn-group-sm
                        button.btn.btn-primary.yes(type="button", data-bind="css: {active: u.settings.photo_show_watermark()}, click: watermarkShow") Yes
                        button.btn.btn-primary.no(type="button", data-bind="css: {active: !u.settings.photo_show_watermark()}, click: watermarkShow") No

            //ko if: u.nowaterchange()
            dl.dl-horizontal: .helpexists: abbr.text-danger
                span.glyphicon.glyphicon-warning-sign
                span(data-bind="text: ' Administrator has forbidden ' + (itsMe()?'you':'user') + ' to change watermark settings on ' + (itsMe()?'your':'his') + ' images'")
            // /ko
            .watersingcontrol(data-bind="css: {deny: itsMe() && u.nowaterchange()}")
                dl.dl-horizontal
                    dt.helpexists
                        abbr(title="Behavior can be changed for each image individually on edit page")
                            span.glyphicon.glyphicon-info-sign
                            |  Text on watermark on my images
                    dd: span.panel-block
                        .btn-group.btn-group-sm(style="margin-bottom:8px")
                            button.btn.btn-primary.yes(type="button", data-bind="css: {active: !!u.settings.photo_watermark_add_sign()}, click: watersignAdd") Yes
                            button.btn.btn-primary.no(type="button", data-bind="css: {active: !u.settings.photo_watermark_add_sign()}, click: watersignAdd") No
                        br
                        // ko if: !!u.settings.photo_watermark_add_sign()
                        .radio(style="margin-top:3px"): label
                            input(type="radio", name="watersign", value="true", data-bind="checked: watersigncheck")
                            | System settings (
                            span(style="color:#777", data-bind="text: 'uploaded by ' + u.login()")
                            | )
                        .radio(style="margin-top:0"): .input-group(style="max-width:500px")
                            input(type="radio", name="watersign", value="custom", data-bind="checked: watersigncheck")
                            span.input-group-addon Text
                            input.form-control(type="text", data-bind="attr: {disabled: watersigncheck()!=='custom'}, value: u.watersignCustom, symbols: {pattern:fields.watersignPattern,watch:u.watersignCustom,noMultiplySpace:true,maxLength:fields.watersignLength}, valueUpdate: 'input', executeOnEnter: watermarkCustomSave")
                            span.input-group-addon.action.save(data-bind="style: {visibility: watersignCustomChanged() ? 'visible' : 'hidden'}, click: watermarkCustomSave")
                                span.glyphicon.glyphicon-ok
                            span.input-group-addon.action.cancel(data-bind="style: {visibility: watersignCustomChanged() ? 'visible' : 'hidden'}, click: watermarkCustomCancel")
                                span.glyphicon.glyphicon-remove
                        // /ko
                        p.text-muted(style="padding-left:8px;line-height:1.1;font-size:11px;")
                            sup(style="margin-left:-6px;") *
                            |  Setting saves automatically and will be applied to all newly uploaded images. To apply it to existing images, push "Apply" below

                        hr(style="margin:8px 0 9px;")
                        abbr(title="Send to reconvert own images, which have no individual watermark setting")
                            | Apply setting to existing images, which have no individual watermark setting:
                        div
                            label.radio-inline
                                input(type="radio", name="reconvert", value="all", data-bind="checked: reconvertcheck")
                                | All
                            label.radio-inline
                                input(type="radio", name="reconvert", value="region", data-bind="checked: reconvertcheck")
                                span
                                    | Within region
                                    input.form-control(id="reconvertRegion", data-bind="attr: {disabled: reconvertcheck()!=='region'}", style="display:inline-block;margin-left:6px;width:180px;", type="number", placeholder="Type region id", maxlength="6")
                            button.btn.btn-sm.btn-primary(type="button", style="margin: 5px 0 8px;", data-bind="click: reconvertPhotos, attr: {disabled: reconvertingPhotos()}") Apply

                        hr(style="margin:8px 0 9px;")
                        abbr(title="Reset individual watermark settings")
                            | Reset individual watermark settings
                        div
                            label.radio-inline
                                input(type="radio", name="resetwatersign", value="all", data-bind="checked: resetwatersigncheck")
                                | All
                            label.radio-inline
                                input(type="radio", name="resetwatersign", value="region", data-bind="checked: resetwatersigncheck")
                                span
                                    | Within region
                                    input.form-control(id="resetwatersignRegion", data-bind="attr: {disabled: resetwatersigncheck()!=='region'}", style="display:inline-block;margin-left:6px;width:180px;", type="number", placeholder="Type region id", maxlength="6")
                            button.btn.btn-sm.btn-primary(type="button", style="margin: 5px 0 8px;", data-bind="click: individualWatersignReset, attr: {disabled: reconvertingPhotos()}") Сбросить
                            p.text-muted(style="padding-left:8px;line-height:1.1;font-size:11px;")
                                sup(style="margin-left:-6px;") *
                                |  Images will receive setting by default, which specified above. This images will be reconverted automatically

                dl.dl-horizontal
                    dt.helpexists
                        abbr(title="Another registered users will be able to download file that you uploaded")
                            span.glyphicon.glyphicon-info-sign
                            |  Allow to download origin of my images
                    dd: span.panel-block
                        .btn-group.btn-group-sm(style="margin-bottom:8px")
                            button.btn.btn-primary.yes(type="button", data-bind="attr: {disabled: !u.settings.photo_watermark_add_sign()}, css: {active: !u.settings.photo_watermark_add_sign() || !u.settings.photo_disallow_download_origin()}, click: disallowDownloadOrigin") Yes
                            button.btn.btn-primary.no(type="button", data-bind="attr: {disabled: !u.settings.photo_watermark_add_sign()}, css: {active: !!u.settings.photo_watermark_add_sign() && !!u.settings.photo_disallow_download_origin()}, click: disallowDownloadOrigin") No
                        p.text-muted(style="padding-left:8px;line-height:1.1;font-size:11px;")
                            sup(style="margin-left:-6px;") *
                            |  Disallowance of downloading original can be established only for image that has text on watermark
                        p.text-muted(style="padding-left:8px;line-height:1.1;font-size:11px;")
                            sup(style="margin-left:-6px;") *
                            |  For another users download button will be green, if original download is allowed. You always will be able to download original file of your images, if other users can't do it, button will be blue with green arrow

                        hr(style="margin:8px 0 9px;")
                        | Reset individual settings about downloading original image
                        div
                            label.radio-inline
                                input(type="radio", name="disallowDownloadOrigin", value="all", data-bind="checked: resetDisallowDownloadOrigin")
                                | All
                            label.radio-inline
                                input(type="radio", name="disallowDownloadOrigin", value="region", data-bind="checked: resetDisallowDownloadOrigin")
                                span
                                    | In region
                                    input.form-control(id="resetDisallowDownloadOriginRegion", data-bind="attr: {disabled: resetDisallowDownloadOrigin()!=='region'}", style="display:inline-block;margin-left:6px;width:180px;", type="number", placeholder="Type region id", maxlength="6")
                            button.btn.btn-sm.btn-primary(type="button", style="margin: 5px 0 8px;", data-bind="click: individualDisallowDownloadOriginReset, attr: {disabled: reconvertingPhotos()}") Reset
                            p.text-muted(style="padding-left:8px;line-height:1.1;font-size:11px;")
                                sup(style="margin-left:-6px;") *
                                |  For each image you can set allowance of downloading original individually. Here you can reset such individual settings and common setting, specified above, will be applied to them

    .panel.panel-pastvu
        .panel-heading: .panel-title: a(data-toggle="collapse", href="#notice") Subscription and notification
        .panel-collapse.collapse.in#notice: .panel-body
            dl.dl-horizontal
                dt.helpexists
                    abbr(title="Default state of «Subscribe» checkbox at comment writing form")
                        span.glyphicon.glyphicon-info-sign
                        |  Automatic subscription when comment topic
                dd
                    .btn-group.btn-group-sm
                        button.btn.btn-primary.yes(type="button", data-bind="css: {active: u.settings.subscr_auto_reply()}, click: autoReply") Yes
                        button.btn.btn-primary.no(type="button", data-bind="css: {active: !u.settings.subscr_auto_reply()}, click: autoReply") No
            dl.dl-horizontal
                dt.helpexists
                    abbr(title="Minimal amount of time between sending of notification letter")
                        span.glyphicon.glyphicon-info-sign
                        |  Minimum interval between sending
                dd.throttle(data-bind="foreach: vars.subscr_throttle")
                    label.radio-inline
                        input(type="radio", name="subscr_throttle_radios", data-bind="attr: {id: 'subscr_throttle_radios_' + $index(), value: ''+$data}, checked: $parent.u.settings.subscr_throttle")
                        span(data-bind="text: ($data/60000 > 59 ? $data/3600000 + 'h' : $data/60000 + 'm')")