.user_brief(data-bind="with: repository[M!M]")
	.row-fluid
		.avatar.fringe
			img(data-bind="attr: {src: user.avatar()}, event: {load: onAvaLoad, error: onAvaError}")
			//ko if: avaexe()
			.avaLoadCurtain
			// /ko
			//ko if: canAva()
			button.btn-strict.btn-strict-small.avaEdit(data-bind="click: avaActionToggle, css: {disabled: avaexe()}, attr: {disabled: avaexe()}", title="Редактировать аватару")
				i.icon-pencil.icon-white
			//ko if: avaction()
			.avaAction
				input.avaInput(type="file", name="files[]")
				button.btn-strict.avaSelect(data-bind="click: avaSelect, css: {disabled: avaexe()}, attr: {disabled: avaexe()}", title="Загрузить новое изображение")
					i.icon-picture.icon-white
					span Сменить
				//ko if: avaExists()
				button.btn-strict.avaDel(data-bind="click: avaDel, css: {disabled: avaexe()}, attr: {disabled: avaexe()}", title="Удалить загруженное изображение")
					i.icon-remove.icon-white
					span Удалить
				// /ko
			// /ko
			// /ko

	.row-fluid.userName(data-bind="text: user.disp()")
	//ko if: rn()
	.row-fluid.roleName(data-bind="text: rn(), css: rc()")
	// /ko

	//-.row-fluid(data-bind="style: {display:  can_pm() ? '': 'none'}")
		button.btn-strict(type="button", data-bind="event: {}")
			i.icon-envelope.icon-white
			span Send message
	.row-fluid.statBlock
		#info_common.block
			.head Общее
			.h_separator
			dl.dl-horizontal
				dt Регистрация:
				dd(data-bind="text: moment(user.regdate()).format('D MMMM YYYY')")
				dt Статус:
				dd(data-bind="text: user.online() ? 'Онлайн' : 'Оффлайн', css: {green : user.online()}")
	.row-fluid.statBlock
		#short_stat.block
			.head Краткая статистика
			.h_separator
			dl.dl-horizontal
				dt Фотографий:
				dd(data-bind="text: user.pcount()")
				//-dt Blogs created:
				//-dd(data-bind="text: user.bcount()")
				//-dt Favorite areas:
				//-dd 0
				dt Комментариев:
				dd(data-bind="text: user.ccount()")
	//#leftSideDash